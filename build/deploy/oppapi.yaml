apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: oppapi
  name: oppapi
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: oppapi
  strategy: {}
  template:
    metadata:
      labels:
        service: oppapi
    spec:
      containers:
        - name: oppapi
          image: docker.io/nbondarczuk/oppapi:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "100m"
              memory: "20Mi"
            limits:
              cpu: "500m"
              memory: "100Mi"
          ports:
            - containerPort: 8080
              hostPort: 8080
              protocol: TCP
          resources: {}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: oppapi
  name: oppapi
  namespace: default
spec:
  type: NodePort
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      nodePort: 30000
  selector:
    service: oppapi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oppapi-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    kubernetes.io/ingress.class: nginx
spec:
  ingressClassName: nginx
  rules:
    - host: oppapi.info
      http:
        paths:
          - pathType: Prefix
            path: /health
            backend:
              service:
                name: oppapi
                port:
                  number: 8080
